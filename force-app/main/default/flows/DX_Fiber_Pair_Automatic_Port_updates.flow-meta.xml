<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <customErrors>
        <name>Error_Port_Cannot_be_Disconnected</name>
        <label>Error: Port Cannot be Disconnected</label>
        <locationX>666</locationX>
        <locationY>647</locationY>
        <customErrorMessages>
            <errorMessage>Fiber Pair cannot be disconnected from this Port because it has an Active Cross Connect.</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Commited_Service_Order_is_empty</name>
        <label>Commited Service Order is empty?</label>
        <locationX>336</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>Get_Cross_Connect_Destination_Port_for_Fiber_Pair_Port</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Commited_Service_Order_is_empty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Committed_Service_Order__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Connected_Service_Order_is_not_empty</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Connected_Service_Order_is_not_empty</name>
        <label>Connected Service Order is not empty?</label>
        <locationX>182</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>Get_Cross_Connect_Destination_Port_for_Fiber_Pair_Port</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Connected_Service_Order_is_not_empty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Connected_Service_Order__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Port_Status_to_Installed_Homerun_not_Contracted</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Exist_Cross_Connect_DP_for_FiberPair_Port</name>
        <label>Exist Cross Connect DP for FiberPair Port?</label>
        <locationX>105</locationX>
        <locationY>1439</locationY>
        <defaultConnector>
            <targetReference>Update_Port_Status_to_Ready_for_Cross_Connect2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Exist_Cross_Connect_DP_for_FiberPair_Port</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Cross_Connect_Origination_Port_for_Fiber_Pair_Port.Destination_Port__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Exist_Cross_Connect_OP_for_FiberPair_Port</name>
        <label>Exist Cross Connect OP for FiberPair Port?</label>
        <locationX>105</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Update_Port_Status_to_Ready_for_Cross_Connect</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Exist_Cross_Connect_OP_for_FiberPair_Port</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Cross_Connect_Origination_Port_for_Fiber_Pair_Port.Origination_Port__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Cross_Connect_Destination_Port_for_Fiber_Pair_Port</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Exist_Cross_Connect_with_Status_Connected</name>
        <label>Exist Cross Connect with Status Connected?</label>
        <locationX>798</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Update_Port_status_to_No_Homerun</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Exist_Cross_Connect_with_Status_Connected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Cross_Connect_for_Port_with_Status_Connected.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Error_Port_Cannot_be_Disconnected</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Port</name>
        <label>Has Port?</label>
        <locationX>451</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Get_Cross_Connect_for_Port_with_Status_Connected</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Has_Port</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Port__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Cross_Connect_Origination_Port_for_Fiber_Pair_Port</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>DX Fiber Pair - Automatic Port updates {!$Flow.CurrentDateTime}</interviewLabel>
    <label>DX Fiber Pair - Automatic Port updates</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Cross_Connect_Destination_Port_for_Fiber_Pair_Port</name>
        <label>Get Cross Connect Destination Port for Fiber Pair Port</label>
        <locationX>105</locationX>
        <locationY>1331</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Exist_Cross_Connect_DP_for_FiberPair_Port</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Destination_Port__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Port__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>DC_Cross_Connect__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Cross_Connect_for_Port_with_Status_Connected</name>
        <label>Get Cross Connect for Port with Status Connected</label>
        <locationX>798</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Exist_Cross_Connect_with_Status_Connected</targetReference>
        </connector>
        <filterLogic>(1 OR 2) AND 3</filterLogic>
        <filters>
            <field>Origination_Port__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Port__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Destination_Port__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Port__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Xconnect_Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Connected</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>DC_Cross_Connect__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Cross_Connect_Origination_Port_for_Fiber_Pair_Port</name>
        <label>Get Cross Connect Origination Port for Fiber Pair Port</label>
        <locationX>105</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Exist_Cross_Connect_OP_for_FiberPair_Port</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Origination_Port__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Port__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>DC_Cross_Connect__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Port_Status_to_Installed_Homerun_not_Contracted</name>
        <label>Update Port Status to Installed Homerun not Contracted</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>Get_Cross_Connect_Destination_Port_for_Fiber_Pair_Port</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Port__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Port_Status__c</field>
            <value>
                <stringValue>Installed Homerun not Contracted</stringValue>
            </value>
        </inputAssignments>
        <object>DC_Port__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Port_status_to_No_Homerun</name>
        <label>Update Port status to No Homerun</label>
        <locationX>930</locationX>
        <locationY>647</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Port__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Port_Status__c</field>
            <value>
                <stringValue>No Homerun</stringValue>
            </value>
        </inputAssignments>
        <object>DC_Port__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Port_Status_to_Ready_for_Cross_Connect</name>
        <label>Update Port Status to Ready for Cross Connect</label>
        <locationX>336</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Commited_Service_Order_is_empty</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Port__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Port_Status__c</field>
            <value>
                <stringValue>Ready for Cross Connect</stringValue>
            </value>
        </inputAssignments>
        <object>DC_Port__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Port_Status_to_Ready_for_Cross_Connect2</name>
        <label>Update Port Status to Ready for Cross Connect</label>
        <locationX>237</locationX>
        <locationY>1547</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Port__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Port_Status__c</field>
            <value>
                <stringValue>Ready for Cross Connect</stringValue>
            </value>
        </inputAssignments>
        <object>DC_Port__c</object>
    </recordUpdates>
    <start>
        <locationX>325</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Has_Port</targetReference>
        </connector>
        <object>DC_Fiber_Pair__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
