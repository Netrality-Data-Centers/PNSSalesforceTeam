<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <decisions>
        <name>Record_Type</name>
        <label>Record Type ?</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>New_Logo_or_New_Market</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Oppty_Record_Type.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New Logo</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Oppty_Record_Type.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New Market</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Platform_Event</targetReference>
            </connector>
            <label>New Logo or New Market</label>
        </rules>
    </decisions>
    <description>Publishes a Platform Event when an Opportunity (which Record Type is New Logo or New Market) is marked as Closed Won</description>
    <environments>Default</environments>
    <interviewLabel>DX {!$Flow.CurrentDateTime}</interviewLabel>
    <label>DX Publish PE when Oppty is Closed Won</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Platform_Event</name>
        <label>Create Platform Event</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <faultConnector>
            <targetReference>Create_Log_Error</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>Opportunity_Id__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Opportunity_Record_Type__c</field>
            <value>
                <elementReference>Get_Oppty_Record_Type.Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Opportunity_Status__c</field>
            <value>
                <elementReference>$Record.StageName</elementReference>
            </value>
        </inputAssignments>
        <object>DX_Opportunity_Won_Event__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Oppty_Record_Type</name>
        <label>Get Oppty Record Type</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RecordTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Oppty_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed Won</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsWon</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Create_Log_Error</name>
        <label>Create Log Error</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <flowName>DX_Error_Log_Creation</flowName>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>FlowName</name>
            <value>
                <stringValue>DX Publish PE when Oppty is Closed Won</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>MethodName</name>
            <value>
                <stringValue>Create Platform Event</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ObjectName</name>
            <value>
                <stringValue>DX_Opportunity_Won__e</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>RecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>TypeOfOperation</name>
            <value>
                <stringValue>Insert</stringValue>
            </value>
        </inputAssignments>
    </subflows>
</Flow>
